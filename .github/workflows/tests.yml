name: testing
on:
  push:
    tags:
      - v*
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

jobs:
  unit-testing:
    strategy:
      matrix:
        go: [1.18, 1.19]
        os: [macos-latest, windows-latest, ubuntu-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - uses: actions/checkout@v3

      - run: "go test ./..."

  testing:
    strategy:
      matrix:
        go: [1.18, 1.19]
        os: [macos-latest, windows-latest, ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - uses: actions/checkout@v3

      - name: "Build pap"
        run: "go build ."

      - name: "Run help"
        run: "./pap -y help"

      - name: "Test plugin manager"
        run: |
          ./pap -y plugin install townyadvanced fawe
          ./pap -y plugin uninstall townyadvanced fawe
          ./pap -y plugin install townyadvanced townychat

      - name: "Test paper downloading"
        run: |
          ./pap -y download paper --experimental
          ./pap -y download paper
          ./pap -y download paper --version 1.19.2
          ./pap -y download paper --version 1.19.2 --build 300
          ./pap -y download paper --version 1.12.2 --build 1230
          ./pap -y download paper --version 1.12.2
          ./pap -y download paper --version latest --build latest --experimental
          ./pap -y download paper --version 1.19.3 --build 319 --experimental
          ./pap -y download paper --version 1.19.3 --build 319
          ./pap -y download paper --version 1.12.2 --build latest

      - name: "Test purpur downloading"
        run: |
          ./pap -y download purpur
          ./pap -y download purpur --version 1.19.2
          ./pap -y download purpur --version 1.14.2 --build 124
          ./pap -y download purpur --version 1.14.2
          ./pap -y download purpur --version latest
          ./pap -y download purpur --version 1.19.3 --build 1881
          ./pap -y download purpur --version 1.14.2 --build latest

      - name: "Test official downloading"
        run: |
           ./pap -y download official --snapshot
           ./pap -y download official
           ./pap -y download official --version 1.19.2
           ./pap -y download official --version 1.12.2
           ./pap -y download official --version latest --snapshot
           ./pap -y download official --version 1.19.3 --snapshot
           ./pap -y download official --version 18w07c
           ./pap -y download official --version 1.2.5
           ./pap -y download official --version 1.13-pre6

      - run: "./pap -y sign"
      - name: Read Signed EULA
        run: "cat eula.txt"

      - run: "./pap -y script"
      - run: "./pap -y script --stdout"
      - name: Read Generated Script (windows)
        if: matrix.os == 'windows-latest'
        run: "cat run.bat"
      - name: Read Generated Script (unix)
        if: matrix.os != 'windows-latest'
        run: "cat run.sh"

      - run: "./pap -y script -mem 2G"
      - run: "./pap -y script -mem 2G --stdout"
      - name: Read Generated Script (windows)
        if: matrix.os == 'windows-latest'
        run: "cat run.bat"
      - name: Read Generated Script (unix)
        if: matrix.os != 'windows-latest'
        run: "cat run.sh"

      - run: "./pap -y script -mem 13G"
      - run: "./pap -y script -mem 13G --stdout"
      - name: Read Generated Script (windows)
        if: matrix.os == 'windows-latest'
        run: "cat run.bat"
      - name: Read Generated Script (unix)
        if: matrix.os != 'windows-latest'
        run: "cat run.sh"

      - run: "./pap -y script -mem 13G -gui"
      - run: "./pap -y script -mem 13G -gui --stdout"
      - name: Read Generated Script (windows)
        if: matrix.os == 'windows-latest'
        run: "cat run.bat"
      - name: Read Generated Script (unix)
        if: matrix.os != 'windows-latest'
        run: "cat run.sh"

      - run: "./pap -y script -mem 2000M"
      - run: "./pap -y script -mem 2000M --stdout"
      - name: Read Generated Script (windows)
        if: matrix.os == 'windows-latest'
        run: "cat run.bat"
      - name: Read Generated Script (unix)
        if: matrix.os != 'windows-latest'
        run: "cat run.sh"

      - run: "./pap -y script -mem 2000M -gui"
      - run: "./pap -y script -mem 2000M -gui --stdout"
      - name: Read Generated Script (windows)
        if: matrix.os == 'windows-latest'
        run: "cat run.bat"
      - name: Read Generated Script (unix)
        if: matrix.os != 'windows-latest'
        run: "cat run.sh"

      - run: "./pap -y script -jar wow.jar"
      - run: "./pap -y script -jar wow.jar --stdout"
      - name: Read Generated Script (windows)
        if: matrix.os == 'windows-latest'
        run: "cat run.bat"
      - name: Read Generated Script (unix)
        if: matrix.os != 'windows-latest'
        run: "cat run.sh"

      - run: "./pap -y script -jar wow.jar -gui"
      - run: "./pap -y script -jar wow.jar -gui --stdout"
      - name: Read Generated Script (windows)
        if: matrix.os == 'windows-latest'
        run: "cat run.bat"
      - name: Read Generated Script (unix)
        if: matrix.os != 'windows-latest'
        run: "cat run.sh"

      - run: "./pap -y script -jar -gui wow.jar"
      - run: "./pap -y script -jar -gui wow.jar --stdout"
      - name: Read Generated Script (windows)
        if: matrix.os == 'windows-latest'
        run: "cat run.bat"
      - name: Read Generated Script (unix)
        if: matrix.os != 'windows-latest'
        run: "cat run.sh"

      - run: "./pap -y script -jar wow.jar -mem 4G -gui"
      - run: "./pap -y script -jar wow.jar -mem 4G -gui --stdout"
      - name: Read Generated Script (windows)
        if: matrix.os == 'windows-latest'
        run: "cat run.bat"
      - name: Read Generated Script (unix)
        if: matrix.os != 'windows-latest'
        run: "cat run.sh"

      - run: "./pap -y script -aikars -mem 2G"
      - run: "./pap -y script -aikars -mem 2G --stdout"
      - name: Read Generated Script (windows)
        if: matrix.os == 'windows-latest'
        run: "cat run.bat"
      - name: Read Generated Script (unix)
        if: matrix.os != 'windows-latest'
        run: "cat run.sh"

      - run: "./pap -y script -aikars -mem 13G"
      - run: "./pap -y script -aikars -mem 13G --stdout"
      - name: Read Generated Script (windows)
        if: matrix.os == 'windows-latest'
        run: "cat run.bat"
      - name: Read Generated Script (unix)
        if: matrix.os != 'windows-latest'
        run: "cat run.sh"

      - run: "./pap -y script -aikars -mem 13G -gui"
      - run: "./pap -y script -aikars -mem 13G -gui --stdout"
      - name: Read Generated Script (windows)
        if: matrix.os == 'windows-latest'
        run: "cat run.bat"
      - name: Read Generated Script (unix)
        if: matrix.os != 'windows-latest'
        run: "cat run.sh"

      - run: "./pap -y script -aikars -mem 2000M"
      - run: "./pap -y script -aikars -mem 2000M --stdout"
      - name: Read Generated Script (windows)
        if: matrix.os == 'windows-latest'
        run: "cat run.bat"
      - name: Read Generated Script (unix)
        if: matrix.os != 'windows-latest'
        run: "cat run.sh"

      - run: "./pap -y script -aikars -mem 2000M -gui"
      - run: "./pap -y script -aikars -mem 2000M -gui --stdout"
      - name: Read Generated Script (windows)
        if: matrix.os == 'windows-latest'
        run: "cat run.bat"
      - name: Read Generated Script (unix)
        if: matrix.os != 'windows-latest'
        run: "cat run.sh"

      - run: "./pap -y script -aikars -jar wow.jar"
      - run: "./pap -y script -aikars -jar wow.jar --stdout"
      - name: Read Generated Script (windows)
        if: matrix.os == 'windows-latest'
        run: "cat run.bat"
      - name: Read Generated Script (unix)
        if: matrix.os != 'windows-latest'
        run: "cat run.sh"

      - run: "./pap -y script -aikars -jar wow.jar -gui"
      - run: "./pap -y script -aikars -jar wow.jar -gui --stdout"
      - name: Read Generated Script (windows)
        if: matrix.os == 'windows-latest'
        run: "cat run.bat"
      - name: Read Generated Script (unix)
        if: matrix.os != 'windows-latest'
        run: "cat run.sh"

      - run: "./pap -y script -aikars -jar -gui wow.jar"
      - run: "./pap -y script -aikars -jar -gui wow.jar --stdout"
      - name: Read Generated Script (windows)
        if: matrix.os == 'windows-latest'
        run: "cat run.bat"
      - name: Read Generated Script (unix)
        if: matrix.os != 'windows-latest'
        run: "cat run.sh"

      - run: "./pap -y script -aikars -jar wow.jar -mem 4G -gui"
      - run: "./pap -y script -aikars -jar wow.jar -mem 4G -gui --stdout"
      - name: Read Generated Script (windows)
        if: matrix.os == 'windows-latest'
        run: "cat run.bat"
      - name: Read Generated Script (unix)
        if: matrix.os != 'windows-latest'
        run: "cat run.sh"

      - run: "./pap -y version"
      - name: Read Generated Script (windows)
        if: matrix.os == 'windows-latest'
        run: "cat run.bat"
      - name: Read Generated Script (unix)
        if: matrix.os != 'windows-latest'
        run: "cat run.sh"

      - name: "Reset server.properties"
        run: "./pap -y properties reset"
      - name: Read created server.properties
        run: "cat server.properties"

      - name: "Get server property"
        run: "./pap -y properties get gamemode"
    
      - name: "Set server property"
        run: "./pap -y properties set gamemode creative"
      - name: Read modified server.properties
        run: "cat server.properties"

      - name: "Get modifiedserver property"
        run: "./pap -y properties get gamemode"
      
      - name: "Test geyser command"
        run: |
          ./pap -y geyser
          ./pap -y geyser --no-floodgate
